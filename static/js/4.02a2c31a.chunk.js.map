{"version":3,"sources":["Component/Form/Form.module.css","Component/ContactList/Listcontact.module.css","Component/Filter/Filter.module.css","Component/PhoneBook/phone.module.css","redux/contacts/operationContacts.js","Component/Form/formEditor.js","redux/contacts/contactSelector.js","Component/ContactList/ListContact.js","Component/Filter/Filter.js","Component/PhoneBook/PhoneBook.js"],"names":["module","exports","axios","defaults","baseURL","addContacts","name","number","dispatch","contactAction","addContactRecuest","post","then","response","addContactSuccess","data","catch","error","addContactError","fetchContacts","fetchContactRecuest","get","console","log","fetchContactSuccess","fetchContactError","deleteContacts","id","deleteContactRecuest","delete","deleteContactSuccess","deleteContactError","Form","state","handelInputChange","e","preventDefault","setState","target","value","handelSubmit","evt","props","onhandleAddContact","this","className","style","formStyle","Typography","variant","formStyleTitle","formStyleFormInput","onSubmit","type","onChange","placeholder","autoFocus","Button","color","Component","connect","operationContacts","getitemContacts","allContacts","itemContacts","getFilter","filter","getLoading","loading","getVisibleContact","createSelector","contacts","contact","toLowerCase","includes","mapDispatchToProps","onDeleteContact","operationContact","contactSelector","map","ListContactItem","buttonDeleteContact","onClick","mapDispatchtoProps","filterContact","filterTitle","filterInput","PhoneBook","onFetchContact","isAuthLogIn","history","replace","phone","isLoadingContacts","isLogIn"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,eAAiB,6BAA6B,mBAAqB,iCAAiC,oBAAsB,oC,oBCAhLD,EAAOC,QAAU,CAAC,gBAAkB,qCAAqC,oBAAsB,2C,0CCA/FD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,4BAA4B,YAAc,8B,oBCA1GD,EAAOC,QAAU,CAAC,MAAQ,uB,kICE1BC,IAAMC,SAASC,QAAU,2CAEzB,IAmCe,GACbC,YApCkB,SAACC,EAAMC,GAAP,OAAkB,SAACC,GACrCA,EAASC,IAAcC,qBACvBR,IACGS,KAAK,YAAa,CAAEL,OAAMC,WAC1BK,MAAK,SAACC,GAGLL,EAASC,IAAcK,kBAAkBD,EAASE,UAEnDC,OAAM,SAACC,GAAD,OAAWT,EAASC,IAAcS,gBAAgBD,SA4B3DE,cAzBoB,kBAAM,SAACX,GAC3BA,EAASC,IAAcW,uBACvBlB,IACGmB,IAAI,aAEJT,MAAK,SAACC,GACLS,QAAQC,IAAIV,EAASE,MACrBP,EAASC,IAAce,oBAAoBX,EAASE,UAErDC,OAAM,SAACC,GAAD,OAAWT,EAASC,IAAcgB,kBAAkBR,SAiB7DS,eAdqB,SAACC,GAAD,OAAQ,SAACnB,GAC9BA,EAASC,IAAcmB,wBACvB1B,IACG2B,OADH,oBACuBF,IACpBf,MAAK,WACJJ,EAASC,IAAcqB,qBAAqBH,OAG7CX,OAAM,SAACC,GAAD,OAAWT,EAASC,IAAcsB,mBAAmBd,U,oCC/B1De,E,4MACJC,MAAQ,CACN3B,KAAM,GACNC,OAAQ,I,EAGV2B,kBAAoB,SAACC,GACnBA,EAAEC,iBACF,EAAKC,SAAL,eAAiBF,EAAEG,OAAOhC,KAAO6B,EAAEG,OAAOC,S,EAE5CC,aAAe,SAACC,GACdA,EAAIL,iBAEJ,EAAKM,MAAMC,mBAAmB,EAAKV,MAAM3B,KAAM,EAAK2B,MAAM1B,QAE1D,EAAK8B,SAAS,CAAE/B,KAAM,GAAIC,OAAQ,M,uDAG1B,IAAD,EACkBqC,KAAKX,MAAtB3B,EADD,EACCA,KAAMC,EADP,EACOA,OAEd,OACE,sBAAKsC,UAAWC,IAAMC,UAAtB,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,UAAWC,IAAMI,eAA1C,uBACA,uBAAML,UAAWC,IAAMK,mBAAoBC,SAAUR,KAAKJ,aAA1D,UACE,kCACC,cAACQ,EAAA,EAAD,CAAYC,QAAQ,KAApB,kBACC,uBACA,uBACEI,KAAK,OACL/C,KAAK,OACLiC,MAAOjC,EACPgD,SAAUV,KAAKV,kBACfqB,YAAY,WACZC,WAAS,IAEX,0BAEF,kCACA,cAACR,EAAA,EAAD,CAAYC,QAAQ,KAApB,oBACE,uBACA,uBACEI,KAAK,OACL/C,KAAK,SACLiC,MAAOhC,EACP+C,SAAUV,KAAKV,kBACfqB,YAAY,aACZC,WAAS,OAGb,uBACA,cAACC,EAAA,EAAD,CAASC,MAAQ,YAAYT,QAAQ,YAAYI,KAAK,SAAtD,mC,GAnDSM,aAmEJC,cAAQ,MAPI,SAACpD,GAC1B,MAAO,CACLmC,mBAAoB,SAACrC,EAAMC,GAAP,OAClBC,EAASqD,EAAkBxD,YAAYC,EAAMC,QAIpCqD,CAAkC5B,G,QCtE3C8B,EAAkB,SAAC7B,GAAD,OAAWA,EAAM8B,YAAYC,cAC/CC,EAAY,SAAChC,GAAD,OAAWA,EAAM8B,YAAYG,QAahC,GACXJ,kBACAG,YACAE,WAfgB,SAAClC,GAAD,OAAWA,EAAM8B,YAAYK,SAgB7CC,kBAduBC,YAAgB,CAACR,EAAiBG,IAAY,SAACM,EAAUL,GAK9E,OAJqBK,EAASL,QAAO,SAACM,GAEpC,OADYA,EAAQlE,KAAKmE,cACdC,SAASR,EAAOO,sB,yBCqBnC,IAIME,EAAqB,CAEzBC,gBAAiBC,EAAiBnD,gBAGrBkC,eATS,SAAC3B,GAAD,MAAY,CAClCuC,QAAQM,EAAgBT,kBAAkBpC,MAQJ0C,EAAzBf,EA7Bf,YAAoD,IAA7BY,EAA4B,EAA5BA,QAASI,EAAmB,EAAnBA,gBAC9B,OACE,6BAEGJ,EAAQO,KAAI,gBAAGpD,EAAH,EAAGA,GAAIrB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACX,qBAAasC,UAAWC,IAAMkC,gBAA9B,UACE,eAAChC,EAAA,EAAD,WAAc1C,EAAd,OACA,cAAC0C,EAAA,EAAD,UAAczC,IAGd,wBACEsC,UAAWC,IAAMmC,oBACjBC,QAAS,kBAAMN,EAAgBjD,QAP1BA,W,kBCSjB,IAGMwD,EAAqB,CACzB7B,SAAU7C,IAAc2E,eAEXxB,eANS,SAAA3B,GAAK,MAAK,CAChCM,MAAOuC,EAAgBb,UAAUhC,MAKIkD,EAAxBvB,EAvBd,YAAoC,IAAnBrB,EAAkB,EAAlBA,MAAOe,EAAW,EAAXA,SAEvB,OACE,uBAAMT,UAAaC,IAAMoB,OAAzB,UACE,cAAClB,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,UAAaC,IAAMuC,YAA5C,mCACA,uBACAxC,UAAaC,IAAMwC,YAEjBjC,KAAK,OACL/C,KAAK,SACLiC,MAAOA,EACPe,SAAU,SAAAnB,GAAC,OAAImB,EAASnB,EAAEG,OAAOC,gB,0BCNnCgD,E,kLAEF3C,KAAKF,MAAM8C,iBAEN5C,KAAKF,MAAM+C,aACd7C,KAAKF,MAAMgD,QAAQC,QAAQ,Y,2CAMxB/C,KAAKF,MAAM+C,aACd7C,KAAKF,MAAMgD,QAAQC,QAAQ,Y,+BAM7B,OACE,sBAAK9C,UAAWC,IAAM8C,MAAtB,UACGhD,KAAKF,MAAMmD,mBAAqB,6CACjC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAvBgBlC,aAqCTC,uBATS,SAAC3B,GAAD,MAAY,CAClC4D,kBAAmBf,EAAgBX,WAAWlC,GAC9CwD,YAAaK,YAAQ7D,OAGI,SAACzB,GAAD,MAAe,CACxCgF,eAAgB,kBAAMhF,EAASqE,EAAiB1D,qBAGnCyC,CAA6C2B","file":"static/js/4.02a2c31a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formStyle\":\"Form_formStyle__1B3WC\",\"formStyleTitle\":\"Form_formStyleTitle__2ms-M\",\"formStyleFormInput\":\"Form_formStyleFormInput__1fSr_\",\"formStyleFormButton\":\"Form_formStyleFormButton__1dh4w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListContactItem\":\"Listcontact_ListContactItem__3Be3W\",\"buttonDeleteContact\":\"Listcontact_buttonDeleteContact__tMe7E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3vjC_\",\"filterInput\":\"Filter_filterInput__W5it4\",\"filterTitle\":\"Filter_filterTitle__2-bEQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phone\":\"phone_phone__1I910\"};","import axios from \"axios\";\r\nimport contactAction from \"./contactAction\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst addContacts = (name, number) => (dispatch) => {\r\n  dispatch(contactAction.addContactRecuest());\r\n  axios\r\n    .post(\"/contacts\", { name, number })\r\n    .then((response) => {\r\n      // console.log(response.config.headers);\r\n\r\n      dispatch(contactAction.addContactSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(contactAction.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(contactAction.fetchContactRecuest());\r\n  axios\r\n    .get(\"/contacts\")\r\n       \r\n    .then((response) => {\r\n      console.log(response.data)\r\n      dispatch(contactAction.fetchContactSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(contactAction.fetchContactError(error)));\r\n};\r\n\r\nconst deleteContacts = (id) => (dispatch) => {\r\n  dispatch(contactAction.deleteContactRecuest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(contactAction.deleteContactSuccess(id));\r\n    })\r\n\r\n    .catch((error) => dispatch(contactAction.deleteContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContacts,\r\n  fetchContacts,\r\n  deleteContacts,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport operationContacts from \"../../redux/contacts/operationContacts\";\r\nimport { Button, Typography} from \"@material-ui/core\";\r\nimport style from \"./Form.module.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handelInputChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handelSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    this.props.onhandleAddContact(this.state.name, this.state.number);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <div className={style.formStyle}>\r\n        <Typography variant=\"h6\" className={style.formStyleTitle}>Phonebook</Typography>\r\n        <form className={style.formStyleFormInput} onSubmit={this.handelSubmit}>\r\n          <label>\r\n           <Typography variant=\"h8\">Name</Typography>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handelInputChange}\r\n              placeholder=\"Add name\"\r\n              autoFocus\r\n            ></input>\r\n            <br />\r\n          </label>\r\n          <label>\r\n          <Typography variant=\"h8\">Number</Typography>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handelInputChange}\r\n              placeholder=\"Add number\"\r\n              autoFocus\r\n            ></input>\r\n          </label>\r\n          <br />\r\n          <Button  color = \"secondary\" variant=\"contained\" type=\"submit\" >\r\n            Add contact\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onhandleAddContact: (name, number) =>\r\n      dispatch(operationContacts.addContacts(name, number)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import {createSelector} from \"@reduxjs/toolkit\"\r\n\r\n\r\nconst getitemContacts = (state) => state.allContacts.itemContacts;\r\nconst getFilter = (state) => state.allContacts.filter;\r\n const getLoading = (state) => state.allContacts.loading;\r\n\r\n const getVisibleContact = createSelector ([getitemContacts, getFilter], (contacts, filter ) => {\r\n    const visibleContact = contacts.filter((contact) => {\r\n        const str = contact.name.toLowerCase();\r\n        return str.includes(filter.toLowerCase());\r\n      });\r\n      return visibleContact;\r\n })\r\n\r\n\r\n\r\nexport default {\r\n    getitemContacts,\r\n    getFilter,\r\n    getLoading,\r\n    getVisibleContact\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport operationContact from \"../../redux/contacts/operationContacts\";\r\nimport contactSelector from \"../../redux/contacts/contactSelector\"\r\n\r\nimport style from \"./Listcontact.module.css\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport \"./ListContactAnimation.css\";\r\n\r\n\r\nfunction ListContact({ contact, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      \r\n      {contact.map(({ id, name, number }) => (\r\n        <li key={id} className={style.ListContactItem}>\r\n          <Typography >{name}:</Typography>\r\n          <Typography >{number}</Typography>\r\n         \r\n\r\n          <button\r\n            className={style.buttonDeleteContact}\r\n            onClick={() => onDeleteContact(id)}\r\n          ></button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contact:contactSelector.getVisibleContact(state)\r\n\r\n})\r\nconst mapDispatchToProps = {\r\n   \r\n  onDeleteContact: operationContact.deleteContacts,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContact);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactAction from \"../../redux/contacts/contactAction\"\r\nimport contactSelector from \"../../redux/contacts/contactSelector\"\r\n\r\nimport style from \"./Filter.module.css\"\r\nimport { Typography} from \"@material-ui/core\";\r\n\r\n function Filter({value, onChange}) {\r\n   \r\n  return (\r\n    <form className = {style.filter}>\r\n      <Typography variant=\"h6\" className = {style.filterTitle}>Find contacts by name</Typography>\r\n      <input\r\n      className = {style.filterInput\r\n      }\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={e => onChange(e.target.value)}\r\n        \r\n      />\r\n    </form>\r\n  );\r\n}\r\nconst mapStateToProps = state => ({\r\n  value: contactSelector.getFilter(state)\r\n})\r\nconst mapDispatchtoProps = {\r\n  onChange: contactAction.filterContact\r\n}\r\nexport default connect(mapStateToProps,mapDispatchtoProps)(Filter);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Form from \"../Form/formEditor\";\r\nimport ListContact from \"../ContactList/ListContact\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport operationContact from \"../../redux/contacts/operationContacts\";\r\nimport contactSelector from \"../../redux/contacts/contactSelector\";\r\nimport { isLogIn } from \"../../redux/auth/authSelector\";\r\nimport style from \"./phone.module.css\"\r\n\r\n\r\n//\r\nclass PhoneBook extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContact();\r\n\r\n    if (!this.props.isAuthLogIn) {\r\n      this.props.history.replace(\"/login\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (!this.props.isAuthLogIn) {\r\n      this.props.history.replace(\"/login\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={style.phone}>\r\n        {this.props.isLoadingContacts && <h1>LOADING ...</h1>}\r\n        <Form />\r\n        <Filter />\r\n        <ListContact />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isLoadingContacts: contactSelector.getLoading(state),\r\n  isAuthLogIn: isLogIn(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onFetchContact: () => dispatch(operationContact.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBook);\r\n"],"sourceRoot":""}